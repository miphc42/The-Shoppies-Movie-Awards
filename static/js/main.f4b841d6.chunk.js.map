{"version":3,"sources":["components/Card.jsx","App.js","index.js"],"names":["CardComp","props","useState","disable","setDisable","modalText","setModalText","modal","setModal","toggle","movieInfo","movie","console","log","deleteState","buttonText","useEffect","link","Poster","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","id","CardImg","top","src","alt","CardBody","CardTitle","tag","Title","CardSubtitle","Year","disabled","state","nominate","forEach","element","imdbID","length","passToParent","App","input","setInput","setNominate","data","setData","exist","setExist","info","setInfo","childCallback","value","len","push","className","class","type","placeholder","onKeyDown","e","key","fetch","then","response","json","result","toString","Response","onChange","event","target","map","val","index","indexOf","splice","Search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAgFeA,EAzEE,SAACC,GACd,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAS,kBAAMD,GAAUD,IACzBG,EAAYT,EAAMU,MAGxBC,QAAQC,IAAIZ,EAAMa,aAClBF,QAAQC,IAAIZ,EAAMc,YAElBC,qBAAU,WACFf,EAAMa,aAAeX,EACrBC,GAAW,GACHH,EAAMa,aACdV,GAAW,MAKnB,IAsBIa,EAA4B,QAArBP,EAAUQ,OAAmBR,EAAUQ,OAAS,oHAE3D,OACI,qCACI,eAACC,EAAA,EAAD,CAAOC,OAAQb,EAAOE,OAAQA,EAA9B,UACI,cAACY,EAAA,EAAD,CAAaZ,OAAQA,EAArB,wBACA,eAACa,EAAA,EAAD,eAAajB,EAAb,OACA,cAACkB,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAASjB,EAAnC,qBAGJ,eAAC,IAAD,CAAMkB,GAAG,OAAT,UACI,cAACC,EAAA,EAAD,CAASD,GAAG,MAAME,KAAG,EAACC,IAAKb,EAAMc,IAAI,mBACrC,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAWN,GAAG,QAAQO,IAAI,KAA1B,SAAgCxB,EAAUyB,QAC1C,cAACC,EAAA,EAAD,CAAcT,GAAG,OAAOO,IAAI,KAA5B,SAAkCxB,EAAU2B,OAC5C,cAACb,EAAA,EAAD,CACIc,SAAUnC,EACVwB,GAAG,iBACHD,QAzCI,WAChB,IAAIa,GAAQ,EACZtC,EAAMuC,SAASC,SAAQ,SAAAC,GACfA,EAAQP,QAAUzB,EAAUyB,OAASO,EAAQC,SAAWjC,EAAUiC,SAClEJ,GAAQ,MAGXA,IAC6B,IAA1BtC,EAAMuC,SAASI,QACfpC,GAAS,GACTF,EAAa,sCAEiB,IAA1BL,EAAMuC,SAASI,SACfpC,GAAS,GACTF,EAAa,6BAEjBF,GAAW,GACXH,EAAM4C,aAAanC,MAqBnB,SAIKT,EAAMc,uB,YCuDZ+B,MAxHf,WAGE,MAA0B5C,mBAAS,IAAnC,mBAAO6C,EAAP,KAAcC,EAAd,KACA,EAAgC9C,mBAAS,IAAzC,mBAAOsC,EAAP,KAAiBS,EAAjB,KACA,EAAwB/C,mBAAS,IAAjC,mBAAOgD,EAAP,KAAaC,EAAb,KACA,EAA0BjD,oBAAS,GAAnC,mBAAOkD,EAAP,KAAcC,EAAd,KACA,EAAwBnD,mBAAS,iDAAjC,mBAAOoD,EAAP,KAAaC,EAAb,KA0BMC,EAAgB,SAACC,GACrB,IAAIC,EAAMlB,EAASI,OACfc,EAAM,IACRlB,EAASmB,KAAKF,GACdR,EAAY,YAAIT,IAChBA,EAASI,OAASc,IAItB,OACE,sBAAKE,UAAU,MAAf,UACI,qBAAKA,UAAU,OAAf,SACE,oBAAIA,UAAU,QAAd,4BAEF,sBAAKA,UAAU,QAAf,UACE,mBAAGjC,GAAG,cAAckC,MAAM,kBAC1B,uBACEC,KAAK,OACLC,YAAY,YACZC,UA3CU,SAACC,GACL,UAAVA,EAAEC,KACJC,MAAM,0DAAD,OAA2DpB,EAA3D,gBACJqB,MAAK,SAAAC,GAAQ,OACZA,EAASC,UACVF,MAAK,SAACG,GACGA,EAAOC,WACPtB,EAAKsB,WACb5D,QAAQC,IAAI,WACZD,QAAQC,IAAI0D,GACY,UAApBA,EAAOE,UAAkC,KAAV1B,GACjCnC,QAAQC,IAAI0D,GACZhB,EAAQ,qBACRJ,EAAQoB,GACRlB,GAAS,KAETA,GAAS,GACTF,EAAQoB,QA2BNG,SAAU,SAAAC,GAAK,OAAI3B,EAAS2B,EAAMC,OAAOnB,aAG/C,sBAAKG,UAAU,OAAf,UACA,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,iBAAd,yBACA,qBAAKA,UAAU,gBAAf,SACGpB,EAASI,OAAS,EACjBJ,EAASqC,KAAI,SAACC,EAAKZ,GACjB,OACE,sBAAKN,UAAU,UAAUjC,GAAIuC,EAA7B,UACE,oBAAGN,UAAU,gBAAb,UAA8BkB,EAAI3C,MAAlC,OAEA,sBAAKyB,UAAU,SAAf,cAAyB,qBACzBlC,QAAS,WACL,IAAIqD,EAAQvC,EAASwC,QAAQF,GAC7BtC,EAASyC,OAAOF,EAAO,GACvB9B,EAAY,YAAIT,KAJK,SAKtB,mBAAGqB,MAAM,yBALZ,aAQD,qBAAKD,UAAU,oBAAf,SACH,uEAMLV,EAAKgC,QAAW9B,EAGf,qBAAKQ,UAAU,UAAf,SACCV,EAAKgC,QACJhC,EAAKgC,OAAOL,KAAI,SAACC,EAAKZ,GACpB,IAAI3B,GAAQ,EACRzB,GAAc,EAClBF,QAAQC,IAAI2B,GACZA,EAASC,SAAQ,SAAAC,GACXA,EAAQP,QAAU2C,EAAI3C,OAASO,EAAQC,SAAWmC,EAAInC,SACxDJ,GAAQ,EACRzB,GAAc,MAGlB,IAAIC,EAAawB,EAAQ,aAAe,WACxC,OACE,qBAAKqB,UAAU,QAAf,SACE,cAAC,EAAD,CAAMjD,MAAOmE,EACPtC,SAAUA,EACVK,aAAcW,EACdzC,WAAYA,EACZD,YAAaA,KALOoD,QAjBX,qBAAKN,UAAU,WAAf,SACvB,qBAAIA,UAAU,gBAAd,cAAgCN,EAAhC,YA+BN,wBAAQ3B,GAAG,SAAX,SACM,oBAAIiC,UAAU,YAAd,4F,YClHZuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f4b841d6.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './Card.css'\r\nimport {\r\n    Card, Button, CardImg, CardTitle, CardText, CardGroup,\r\n    CardSubtitle, CardBody, Modal, ModalHeader, ModalBody, ModalFooter\r\n  } from 'reactstrap';\r\n\r\nconst CardComp = (props) => {\r\n    const [disable, setDisable] = useState(false);\r\n\r\n    const [modalText, setModalText] = useState('');\r\n    \r\n    const [modal, setModal] = useState(false);\r\n    \r\n    const toggle = () => setModal(!modal);\r\n    const movieInfo = props.movie;\r\n\r\n\r\n    console.log(props.deleteState);\r\n    console.log(props.buttonText)\r\n\r\n    useEffect(() => {\r\n        if (props.deleteState && disable) {\r\n            setDisable(false);\r\n        } else if (!props.deleteState) {\r\n            setDisable(true);\r\n        }\r\n    });\r\n    \r\n\r\n    const handleClick = () => {\r\n        var state = false;\r\n        props.nominate.forEach(element => {\r\n            if (element.Title === movieInfo.Title && element.imdbID === movieInfo.imdbID) {\r\n                state = true;\r\n            }\r\n        })\r\n        if (!state) { \r\n            if (props.nominate.length === 5) {\r\n                setModal(true);\r\n                setModalText('Already selected maximum amount!');\r\n            } else {\r\n                if (props.nominate.length === 4) {\r\n                    setModal(true);\r\n                    setModalText('5 nominees are selected!');\r\n                }\r\n                setDisable(true);\r\n                props.passToParent(movieInfo);\r\n            }\r\n        }\r\n    }\r\n\r\n    let link = movieInfo.Poster !== 'N/A' ? movieInfo.Poster : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/600px-No_image_available.svg.png';\r\n    \r\n    return (\r\n        <>\r\n            <Modal isOpen={modal} toggle={toggle}>\r\n                <ModalHeader toggle={toggle}>Attention!</ModalHeader>\r\n                <ModalBody> {modalText} </ModalBody>\r\n                <ModalFooter>\r\n                <Button color=\"secondary\" onClick={toggle}>OK</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n            <Card id=\"card\">\r\n                <CardImg id=\"img\" top src={link} alt=\"Card image cap\"/>\r\n                <CardBody>\r\n                <CardTitle id=\"title\" tag=\"h5\">{movieInfo.Title}</CardTitle>\r\n                <CardSubtitle id=\"year\" tag=\"h6\">{movieInfo.Year}</CardSubtitle>\r\n                <Button \r\n                    disabled={disable} \r\n                    id=\"nominateButton\" \r\n                    onClick={handleClick}>\r\n                    {props.buttonText}\r\n                </Button>\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardComp;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Card from './components/Card';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport {CardColumns} from 'reactstrap';\n\nfunction App() {\n\n  // hooks\n  const [input, setInput] = useState('');\n  const [nominate, setNominate] = useState([]);\n  const [data, setData] = useState([]);\n  const [exist, setExist] = useState(false);\n  const [info, setInfo] = useState('Search up your favorite movie to get started!');\n  // fetches the json data of the omdb api movie\n  const handleClick = (e) => {\n    if (e.key === 'Enter') {\n      fetch(`https://www.omdbapi.com/?i=tt3896198&apikey=820dd71f&s=${input}&type=movie`)\n      .then(response =>\n        response.json())\n      .then((result) => {\n        var a = result.toString();\n        var b = data.toString();\n        console.log(\"CLICKKK\")\n        console.log(result);\n        if (result.Response === \"False\" || input === \"\") {\n          console.log(result);\n          setInfo('No results found!');\n          setData(result);\n          setExist(false);\n        } else {\n          setExist(true);\n          setData(result);\n        }\n      })\n    }\n  }\n\n  // handles the callback from the card child\n  const childCallback = (value) => {\n    let len = nominate.length;\n    if (len < 5) {\n      nominate.push(value);\n      setNominate([...nominate]);\n      nominate.length = len;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n        <div className=\"head\">\n          <h2 className=\"title\">The Shoppies</h2>   \n        </div>\n        <div className=\"input\">\n          <i id=\"search-icon\" class=\"fas fa-search\"></i>\n          <input \n            type=\"text\" \n            placeholder=\"Search...\" \n            onKeyDown={handleClick}\n            onChange={event => setInput(event.target.value)}\n          />\n        </div>\n      <div className=\"body\">\n      <div className=\"list-header\">\n          <h5 className=\"nominee-header\">Nominations</h5>\n          <div className=\"list-nominate\">\n            {nominate.length > 0 ?\n              nominate.map((val, key) => {\n                return (\n                  <div className=\"nominee\" id={key}>\n                    <p className=\"nominee-title\">{val.Title} </p>\n                    {/* <p className=\"nominee-year\">{val.Year}</p> */}\n                    <div className=\"delete\"> <div\n                    onClick={() => {\n                        let index = nominate.indexOf(val);\n                        nominate.splice(index, 1);\n                        setNominate([...nominate]);\n                    }}><i class=\"fas fa-trash fa-lg\"></i></div> </div>\n                  </div>\n                );\n              }) : <div className=\"original-nomineee\">\n                <h6>Click nominate to add to list!</h6>\n              </div>\n            }\n          </div>  \n        </div>\n        {\n          !data.Search && !exist ? <div className=\"original\">\n            <h5 className=\"original-text\"> {info} </h5>\n          </div> :\n            <div className=\"content\">\n            {data.Search &&\n              data.Search.map((val, key) => {\n                var state = false;\n                var deleteState = true;\n                console.log(nominate)\n                nominate.forEach(element => {\n                  if (element.Title === val.Title && element.imdbID === val.imdbID) {\n                    state = true;\n                    deleteState = false;\n                  }\n                })\n                let buttonText = state ? 'Nominated!' : 'Nominate';\n                return (\n                  <div className=\"movie\" key={key}>\n                    <Card movie={val} \n                          nominate={nominate} \n                          passToParent={childCallback}\n                          buttonText={buttonText}\n                          deleteState={deleteState}\n                      />\n                  </div>\n                );\n              })\n            }\n          </div>\n        \n        }\n      </div> \n      <footer id=\"footer\">\n            <h5 className=\"foot-text\">Built by Philip Choi for the Shopify UX & Web Developer Intern Challenge</h5>\n        </footer>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}